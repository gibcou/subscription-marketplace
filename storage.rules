rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return request.resource.size < 5 * 1024 * 1024 && // 5MB limit
             request.resource.contentType.matches('image/.*');
    }
    
    function isValidDocumentFile() {
      return request.resource.size < 10 * 1024 * 1024 && // 10MB limit
             request.resource.contentType in ['application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
    }
    
    // Product images - only sellers can upload to their own folder
    match /products/{userId}/{allPaths=**} {
      allow read: if true; // Anyone can view product images
      allow write: if isOwner(userId) && 
                      isValidImageFile() &&
                      // Check if user is a seller
                      firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'seller';
      allow delete: if isOwner(userId);
    }
    
    // User profile images
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true; // Anyone can view profile images
      allow write: if isOwner(userId) && isValidImageFile();
      allow delete: if isOwner(userId);
    }
    
    // User documents (for verification, etc.)
    match /users/{userId}/documents/{allPaths=**} {
      allow read: if isOwner(userId); // Only owner can view documents
      allow write: if isOwner(userId) && isValidDocumentFile();
      allow delete: if isOwner(userId);
    }
    
    // Order receipts and invoices
    match /orders/{orderId}/{allPaths=**} {
      allow read: if isAuthenticated() &&
                     (firestore.get(/databases/(default)/documents/orders/$(orderId)).data.buyerId == request.auth.uid ||
                      firestore.get(/databases/(default)/documents/orders/$(orderId)).data.sellerId == request.auth.uid);
      allow write: if isAuthenticated() &&
                      (firestore.get(/databases/(default)/documents/orders/$(orderId)).data.buyerId == request.auth.uid ||
                       firestore.get(/databases/(default)/documents/orders/$(orderId)).data.sellerId == request.auth.uid) &&
                      isValidDocumentFile();
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if isOwner(userId) && 
                            request.resource.size < 20 * 1024 * 1024; // 20MB limit for temp files
      // Auto-delete temp files after 24 hours (handled by Cloud Functions)
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}